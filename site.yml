---
- name: Setup Splunk Standalone Server
  hosts: all
  become: yes
  tasks:
    - name: Ensure Splunk User Exists
      user:
        name: splunk
        shell: /bin/bash
        createhome: yes
    
    - name: Pause to ensure all server is up
      run_once: true
      pause:
        seconds: 150

- name: Change Splunk Admin Password - ClusterManager
  hosts: ClusterManager
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - ClusterManager
      become: yes
      become_user: splunk
      shell: "sudo -u splunk /opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ ClusterManager.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - Indexer 1
  hosts: indexers
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Indexer 1
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ indexers.idx1.instance_id }}"
      args:
        executable: /bin/bash
      when: inventory_hostname == "idx1"

- name: Change Splunk Admin Password - Indexer 2
  hosts: indexers
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Indexer 2
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ indexers.idx2.instance_id }}"
      args:
        executable: /bin/bash
      when: inventory_hostname == "idx2"

- name: Change Splunk Admin Password - Indexer 3
  hosts: indexers
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Indexer 3
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ indexers.idx3.instance_id }}"
      args:
        executable: /bin/bash
      when: inventory_hostname == "idx3"

- name: Change Splunk Admin Password - Search Head 1
  hosts: SH1
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Search Head 1
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ search_heads.SH1.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - Search Head 2
  hosts: SH2
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Search Head 2
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ search_heads.SH2.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - Search Head 3
  hosts: SH3
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Search Head 3
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ search_heads.SH3.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - Deployment Server
  hosts: Deployment-Server
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Deployment Server
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ Deployment_Server.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - License Server
  hosts: License-Server
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - License Server
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ License_Server.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - Deployer
  hosts: Deployer
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - Deployer
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ Deployer.instance_id }}"
      args:
        executable: /bin/bash

- name: Change Splunk Admin Password - IF1
  hosts: IFs
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - IF1
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ IFs.IF1.instance_id }}"
      args:
        executable: /bin/bash
      when: inventory_hostname == "IF1"

- name: Change Splunk Admin Password - IF2
  hosts: IFs
  gather_facts: no
  become: yes
  vars_files:
    - group_vars/all.yml
  tasks:
    - name: Update Splunk Admin Password - IF2
      become: yes
      become_user: splunk
      shell: "/opt/splunk/bin/splunk edit user admin -password {{ splunk_admin_password }} -role admin -auth admin:SPLUNK-{{ IFs.IF2.instance_id }}"
      args:
        executable: /bin/bash
      when: inventory_hostname == "IF2"